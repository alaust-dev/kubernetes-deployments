apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      volumes:
        - name: {{ .Release.Name }}-config
          configMap:
            name: {{ .Release.Name }}-config
      containers:
        - name: {{ .Release.Name }}
          image: mc8s/paper:1.20.2
          imagePullPolicy: Always
          volumeMounts:
            - name: {{ .Release.Name }}-config
              mountPath: /app/ops.json
              subPath: ops.json
            - name: {{ .Release.Name }}-config
              mountPath: /app/whitelist.json
              subPath: whitelist.json
            - name: {{ .Release.Name }}-storage
              mountPath: /app/world
            - name: {{ .Release.Name }}-nether-storage
              mountPath: /app/world_nether
            - name: {{ .Release.Name }}-end-storage
              mountPath: /app/world_the_end

  volumeClaimTemplates:
  - metadata:
      name: {{ .Release.Name }}-storage
    spec:
      storageClassName: local-path
      accessModes: ["ReadWriteOnce"]
      volumeMode: Filesystem
      resources:
        requests:
          storage: 10Gi
  - metadata:
      name: {{ .Release.Name }}-nether-storage
    spec:
      storageClassName: local-path
      accessModes: ["ReadWriteOnce"]
      volumeMode: Filesystem
      resources:
        requests:
          storage: 10Gi
  - metadata:
      name: {{ .Release.Name }}-end-storage
    spec:
      storageClassName: local-path
      accessModes: ["ReadWriteOnce"]
      volumeMode: Filesystem
      resources:
        requests:
          storage: 10Gi
